bye()
qnorm(.95, mean = 100, sd = 10)
qnorm(.95, mean = 100, sd = 10, lower.tail = TRUE)
qnorm(.95, mean = 100, sd = 10, lower.tail = FALSE)
qnorm(.95, mean = 100, sd = 50/sqrt(50))
?nosim
?sd
nosim <- 1000
n <- 10
rnorm(nosim, 10)
?rnorm
matrix(rnorm(nosim * n), nosim)
test <- matrix(rnorm(nosim * n), nosim)
View(test)
normMean <- apply(test, 1, mean)
?sd
sd(normMean)
pnorm
?pnorm
pnorm(70, mean = 80, sd = 10, lower.tail = TRUE)
?quantile()
?pnorm
qnorm(0.95, mean = 1100, sd = 75)
113^2
12769/75
12769/75^2
qnorm(0.95, mean = 1100, sd = 10/sqrt(100))
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
?bnorm
?binorm
?pbinorm
?pbinom
pbinom
pbinom(4, size = 5, prob = 0.5)
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
?pnorm
pnorm(14, mean = 15, sd = 10)
pnorm(16, mean = 15, sd = 10)
pnorm(10, mean = 15, sd = 10)
?ppois()
ppois(10, lambda = 5, lower.tail = TRUE)
ppois(10, lambda = 5, lower.tail = FALSE)
ppois(3, lambda = 5, lower.tail = FALSE)
?pnorm()
pnorm(1000, mean = 0.5, sd = 1/sqrt(12))
sqrt(1/12/1000)
1/12/1000
?ppois
pbinom
?pbinom
pbinom(0.8, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(1, size = 5, prob = .5, lower.tail = FALSE)
pbinom(2, size = 5, prob = .5, lower.tail = FALSE)
pbinom(3, size = 5, prob = .5, lower.tail = FALSE)
pbinom(4, size = 5, prob = .5, lower.tail = FALSE)
pbinom(5, size = 5, prob = .5, lower.tail = FALSE)
pbinom(0, size = 5, prob = .5, lower.tail = FALSE)
qbinom(.5, size = 5, prob = .5)
qbinom(.5, size = 5, prob = .5, lower.tail = TRUE)
qbinom(.5, size = 5, prob = .5, lower.tail = FALSE)
qbinom(.1/16, size = 5, prob = .5, lower.tail = FALSE)
qbinom(1/16, size = 5, prob = .5, lower.tail = FALSE)
qbinom(1/16, size = 5, prob = .5, lower.tail = TRUE)
qbinom(5/32, size = 5, prob = .5, lower.tail = TRUE)
rbinom(10, 5, 0.5)
rbinom(10, 1, 0.5)
rbinom(1, 5, 0.5)
rbinom(n = 5, size = 1, prob = 0.5)
biMatrix <- matrix(rbinom(n= 5, size =1, prob = 0.5) * 10, 10)
View(biMatrix)
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
?"matrix"
biMatrix <- matrix(rbinom(n= 5, size =1, prob = 0.5) * 10, nrow = 10, ncol = 5)
?rep
biMatrix <- matrix(rep(rbinom(n= 5, size =1, prob = 0.5), 10), nrow = 10, ncol = 5)
View(biMatrix)
biMatrix <- matrix(rbinom(n= 50, size =1, prob = 0.5), nrow = 10, ncol = 5)
View(biMatrix)
library(UsingR)
library(datasets)
install.packages("UsingR")
library("UsingR", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data(father.son)
x <- father.son$sheight
View(father.son)
n <- length(x)
n
x
qplot($x, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_line()
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_line() + aes(y = x)
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_line() + aes(x=x)
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black"))
hist(x)
hData <- hist(x)
qplot(hData$x, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(hData$density, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(hData$count, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(hData$x, geom="histogram", fill = I("lightgreen"), col = I("black"))
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_density(col = 2)
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_density(col = 1)
qplot(x, geom="histogram", fill = I("lightgreen"), col = I("black")) + geom_density()
ggplot(x) + geom_histogram(aes(y = ...density...)) + geom_density(col = 2)
ggplot(aes(x = x)) + geom_histogram(aes(y = ...density...)) + geom_density(col = 2)
?ggplot
ggplot() + geom_histogram(aes(y = ...density...)) + geom_density(col = 2)
ggplot(aes(x)) + geom_histogram(aes(y = ...density...)) + geom_density(col = 2)
?ggplot
ggplot() + geom_histogram(aes(x = x, y = ...density...)) + geom_density(col = 2)
ggplot() + geom_histogram(aes(x = x)) + geom_density(col = 2)
ggplot() + geom_histogram(aes(x = x, y = ..density..))
ggplot() + geom_histogram(aes(x = x, y = ..density..)) + geom_density(col = 2)
ggplot() + geom_histogram(aes(x = x, y = ..density..)) + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x, y = ..density..), break = seq(50,80, by = 5), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x), break = seq(50,80, by = 5), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x), breaks = seq(50,80, by = 5), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x, y = ..desnity..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x, y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(col = 1)
ggplot() + geom_histogram(aes(x = x, y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(col = 2)
ggplot() + geom_histogram(aes(x = x, y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density()
ggplot() + geom_histogram(aes(x = x, y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(fill = "red")
ggplot() + geom_histogram(aes(y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(fill = "red")
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density(fill = "red")
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), breaks = seq(50,80, by = 2), col = "red", fill = "green") + geom_density()
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), col = "red", fill = "green") + geom_density()
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), col = "red", fill = "green") + geom_density(col = 2)
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), col = "red", fill = "green") + geom_density(col = "blue")
round(c(var(x), var(x)/n, sd(x), sd(x)/sqrt(n)), 2)
sqrt(7.92)
xvals <- seq(-10, 10, by = .01)
dat <- data.frame(
y = c(
dnorm(xvals, mean = 0, sd = 1),
dnorm(xvals, mean = 0, sd = 2),
dnorm(xvals, mean = 0, sd = 3),
dnorm(xvals, mean = 0, sd = 4)
),
x = rep(xvals, 4),
factor = factor(rep(1 : 4, rep(length(xvals), 4)))
)
ggplot(dat, aes(x = x, y = y, color = factor)) + geom_line(size = 2)
library(ggplot2)
nosim <- 10000;
dat <- data.frame(
x = c(apply(matrix(rnorm(nosim * 10), nosim), 1, var),
apply(matrix(rnorm(nosim * 20), nosim), 1, var),
apply(matrix(rnorm(nosim * 30), nosim), 1, var)),
n = factor(rep(c("10", "20", "30"), c(nosim, nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, var)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g <- g + geom_vline(xintercept = 2.92, size = 2)
g + facet_grid(. ~ size)
View(dat)
nosim <- 1000
n <- 10
myMatrix <- matrix(runif(nosim * n), nosim)
View(myMatrix)
matrixMeans <- apply(myMatrix, 1, mean)
sd(matrixMeans)
1/sqrt(10000)
nosim <- 1000
n <- 10
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
matrixMeans2 <- apply(matrix(rnorm(nosim * n), nosim), 1, mean)
View(myMatrix)
myMatrix <- matrix(rnorm(nosim * n), nosim)
matrixMeans <- apply(myMatrix, 1, mean)
sd(matrixMeans)
1/sqrt(10)
?sd
nosim <- 1000
n <- 10
sd(apply(matrix(runif(nosim * n), nosim), 1, mean))
1 / sqrt(12 * n)
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), col = "red", fill = "green") + geom_density(col = "blue")
1020/2/5
102 + 1020
1020/4/50
+ 1020
1020*0.25/50
1020*.25
.25*50
library(datasets)
data(mtcars)
mtcars
carMean <- mean(mtcars$mpg)
carMean
carSD <- sd(mtcars$mpg)
carSD
pnorm(0.05, mean = carMean, sd = carSD, lower.tail = TRUE)
qnorm(0.05, mean = carMean, sd = carSD, lower.tail = TRUE)
qnorm(0.05, mean = carMean, sd = carSD, lower.tail = FALSE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - 3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000, 4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE),1000),1,mean))
ggplot(NULL, aes(x)) + geom_histogram(aes(y = ..density..), col = "red", fill = "green") + geom_density(col = "blue")
nosim <- 10000;
dat <- data.frame(
x = c(apply(matrix(rnorm(nosim * 10), nosim), 1, var),
apply(matrix(rnorm(nosim * 20), nosim), 1, var),
apply(matrix(rnorm(nosim * 30), nosim), 1, var)),
n = factor(rep(c("10", "20", "30"), c(nosim, nosim, nosim)))
)
xvals <- seq(-10, 10, by = .01)
dat <- data.frame(
y = c(
dnorm(xvals, mean = 0, sd = 1),
dnorm(xvals, mean = 0, sd = 2),
dnorm(xvals, mean = 0, sd = 3),
dnorm(xvals, mean = 0, sd = 4)
),
x = rep(xvals, 4),
factor = factor(rep(1 : 4, rep(length(xvals), 4)))
)
ggplot(dat, aes(x = x, y = y, color = factor)) + geom_line(size = 2)
swirl()
choose(5, 3) * (0.8 ^ 3) * (0.2 ^ 2)
choose(5, 3) * (0.8 ^ 3) * (0.2 ^ 2) + choose(5, 4) * (0.8 ^ 4) * (0.2 ^ 1) + choose(5, 5) * (0.8 ^ 5) * (0.2 ^ 0)
pbinom(2, 5, prob = 0.8, lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975, mean = 3, sd = 2)
1.96 * 2 + 3
pnorm(1200, mean = 1020, sd = 50)
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm((1200 - 1020)/50)
pnorm((1200 - 1020)/50, lower.tail = FALSE)
qnorm(.75, mean = 1020, sd = 50)
pnorm(qnorm(.53))
.53
ppois(3, lambda = 2.5 * 4)
pbinom(5, 0.1 * 1000, lower.tail = TRUE, log.p = FALSE)
pbinom(5, prob = 0.1 * 1000, lower.tail = TRUE, log.p = FALSE)
pbinom(5, prob = 0.1, size = 1000, lower.tail = TRUE, log.p = FALSE)
pbinom(5,1000,.01)
ppois(5, lambda = 1000 * 0.1)
ppois(5,1000 * 0.1)
ppois(5,1000*.01)
nosim <- 1000
n < - 10
n <- 10
myMatrix <- matrix(rnorm(nosim * n), nosim)
var(myMatrix)
myMatrix
View(myMatrix)
var(myMatrix[1])
var(myMatrix[,1])
mean(myMatrix[,1])
sum((myMatrix[,1] - 0.9822518) ^ 2)
sum((myMatrix[,1] - 0.9822518) ^ 2)/999
sqrt(sum((myMatrix[,1] - 0.9822518) ^ 2)/999)
sd(myMatrix[,1])
1.379827/(sqrt(1000))
p <- c(.1, .2, .3, .4)
x <- 2 : 5
?var
sum((x * p) ^ 2) + sum(x*p)^2
sum((x ^ 2 * p) + sum(x*p)^2
)
sum(x^2 * p) + sum(x*p)^2
sum(x^2 * p) - sum(x*p)^2
roll <- c(1:6)
sum(roll ^ 2)
?cumsum
cumsum(1:3)
sum(1:3)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
qnorm(0.975)
round(1/sqrt(10^(1:6)), 3)
0.56 + c(-1, 1) * qnorm(0.975) * sqrt(0.56 * 0.44/100)
binom.test(56, 100)
binom.test(56, 100,
)
?binom.test
binom.test(56, 100, conf.level = 97.5)
binom.test(56, 100, conf.level = 0.975
)
library(datasets)
data(mtcars)
mean(mtcars$mpg)
sd(mtcars$mpg)
t.test(mtcars$mpg)
?prnorm
?pnorm
pnorm(0.975)
pnorm(0.975, lower.tail = FALSE)
qnorm(0.975)
qnorm(0.975, lower.tail = FALSE)
?choose
choose(2,1)
factorial(2)
setwd("~/R programming/Inferrence/Statistical-Inference-Course-Project")
?rexp
replicate(numSim, mean(rnorm(n, mean = normalMean, sd = normalSD))
)
set.seed(12345)
lambda <- 0.2
n <- 40
numSim <- 1000
replicate(numSim, mean(rnorm(n, mean = normalMean, sd = normalSD)))
normalMean <- 1/lambda
normalSD <- 1/lambda/sqrt(40)
normalVar <- normalSD^2
replicate(numSim, mean(rnorm(n, mean = normalMean, sd = normalSD)))
test = replicate(1000, rnorm(40, mean = normalMean, sd = normalSD))
testMeans = colMeans(test)
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("black"), binwidth = 0.2)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data <- data.frame(x = simColMeans, y = rnorm(1000, mean = normalMean, sd = normalSD))
## replicating random exponential sampling with sampling size n = 40, and repeat
## nSim = 1000 times, and storing sample data in a matrix
simMatrix <- replicate(numSim, rexp(n, rate = lambda))
## getting average for each column of the matrix
simColMeans <- colMeans(simMatrix)
## determining sample mean, sd and variance
sampleMean <- mean(simColMeans)
sampleSD <- sd(simColMeans)
sampleVar <- sampleSD^2
## calculating normal (theoritical) mean, normal standard deviation and variance
normalMean <- 1/lambda
normalSD <- 1/lambda/sqrt(40)
normalVar <- normalSD^2
## making a dataframe storing sample means and normal means
data <- data.frame(x = simColMeans, y = rnorm(1000, mean = normalMean, sd = normalSD))
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("black"), binwidth = 0.2)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p + geom_density(aes(x = testMeans))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
p + geom_density(aes(x = mns))
?runif
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40, min = 4, max = 6)))
p + geom_density(aes(x = mns))
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("black"), binwidth = 0.2)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("black"), binwidth = 0.1)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("darkgreen"), binwidth = 0.1)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("darkgreen"), binwidth = 0.05)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("darkgreen"), binwidth = 0.08)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("lightgreen"), binwidth = 0.1)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("lightgreen"), alpha= 0.75, binwidth = 0.1) p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("lightgreen"), alpha = 0.75, binwidth = 0.1)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "red", xintercept = 1/lambda)
p <- p + geom_vline(color = "yellow", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
p <- ggplot(data, aes(x = x))
p <- p +  geom_histogram(aes(y = ..density..), fill = I("lightgreen"), col = I("lightgreen"), alpha = 0.75, binwidth = 0.1)
p <- p + geom_density(aes(colour = "1")) + labs(x = "", y = "Density", title = "")
p <- p +  geom_density(aes(x = y, colour = "2"))
p <- p + geom_vline(color = "blue", xintercept = 1/lambda)
p <- p + geom_vline(color = "orange", xintercept = sampleMean)
p <- p + labs(x = "", y = "Density", title = "")
p <- p + scale_colour_manual(values=c("1"="blue", "2"="orange"), name="", labels = c("Simulated", "Theoritical"))
p
library(datasets)
data("ToothGrowth")
View(ToothGrowth)
View(ToothGrowth)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Length", y = "Supplement Type")
p <- p + scale_colour_discrete(name  ="Supplement",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Vitamin C"))
p
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Length", y = "Supplement Type")
p <- p + cale_colour_manual(name  ="Supplement",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Vitamin C"))
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Length", y = "Supplement Type")
p <- p + scale_colour_manual(name  ="Supplement",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Vitamin C"))
p
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Supplement", y = "Length")
p <- p + scale_colour_manual(
values=c("OJ"="Orange Juice", "VC"="Vitamin C"),
name="Supplement Type",
labels = c("Sample", "Theoritical"))
p
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Supplement", y = "Length")
p <- p + scale_fill_discrete(name="Experimental\nCondition",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Vitamin C"))
p
p <- ggplot(ToothGrowth, aes(x = supp, y = len))
p <- p + geom_boxplot(aes(fill = supp))
p <- p + labs(x = "Supplement", y = "Length")
p <- p + scale_fill_discrete(name="Delivery Methods",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Vitamin C"))
p
?round
round(3.141345, 4)
